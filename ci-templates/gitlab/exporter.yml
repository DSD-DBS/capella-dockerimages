# SPDX-FileCopyrightText: Copyright DB Netz AG and the capella-collab-manager contributors
# SPDX-License-Identifier: Apache-2.0
# yaml-language-server: $schema=https://gitlab.com/gitlab-org/gitlab/-/raw/master/app/assets/javascripts/editor/schema/ci.json

variables:
  CAPELLA_DOCKER_IMAGES_REVISION: main

export-to-t4c:
  image:
    name: $DOCKER_REGISTRY/t4c/client/exporter:${CAPELLA_DOCKER_IMAGES_TAG}
    entrypoint: [""]
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: always
  before_script:
    # Needed when model modifiers change the models in a row.
    # To avoid conflicts, reset the branch to the latest state.
    - git config --global --add safe.directory $CI_BUILDS_DIR/model
    - git fetch
    - git reset --hard origin/$CI_COMMIT_BRANCH
  script:
    - xvfb-run python /opt/scripts/exporter.py
  variables:
    # Use local filehandler
    # Pulling of the Git repository is done by the Gitlab runner
    FILE_HANDLER: local

    # Semantic Capella version (x.x.x) >= 6.0.0
    # Defaults to 6.0.0 if not defined
    # CAPELLA_VERSION: 6.0.0

    # Docker tag, which is used for the t4c/client/exporter image.
    # Defaults to ${CAPELLA_VERSION}-${CAPELLA_DOCKER_IMAGES_REVISION} if not defined
    CAPELLA_DOCKER_IMAGES_TAG: ${CAPELLA_VERSION}-${CAPELLA_DOCKER_IMAGES_REVISION}

    # Optional: Relative entrypoint to .aird file inside repository (starting from the root of the repository).
    # Must be used if there are multiple projects in the repository/context.
    # Example: test/test.aird
    # ENTRYPOINT: null

    # Required: Hostname of T4C server
    # T4C_REPO_HOST: ${T4C_REPO_HOST}

    # Port of repository endpoint to the T4C server
    # Defaults to 2036
    # T4C_REPO_PORT: 2036

    # Required: T4C project name
    # T4C_PROJECT_NAME: ${T4C_PROJECT_NAME}

    # Required: T4C repository name
    # T4C_REPO_NAME: ${T4C_REPO_NAME}

    # T4C username (for repository login)
    # The user needs access to the specific repository
    # T4C_USERNAME: ${T4C_USERNAME}

    # T4C password (for repository login)
    # T4C_PASSWORD: ${T4C_PASSWORD}

    # HTTP username
    # HTTP_LOGIN: ${HTTP_LOGIN}

    # HTTP password
    # HTTP_PASSWORD: ${HTTP_PASSWORD}

    # HTTP Port (port for REST API endpoint)
    # Defaults to 8080
    # HTTP_PORT: 8080

    # Log level. All Python `logging` levels are allowed.
    # Defaults to INFO
    LOG_LEVEL: INFO

    # Path to the root of the repository. Do not overwrite!
    ROOT_PATH: $CI_BUILDS_DIR/model

    # Clone Git repository into root path. Do not overwrite!
    GIT_CLONE_PATH: $CI_BUILDS_DIR/model
