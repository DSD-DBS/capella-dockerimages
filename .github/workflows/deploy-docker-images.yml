# SPDX-FileCopyrightText: Copyright DB InfraGO AG and contributors
# SPDX-License-Identifier: CC0-1.0
name: Build & push images

on:
  push:
    branches: ['main']
    tags: ['**']
  pull_request:
    branches: ['main']

env:
  COLUMNS: 120
  REGISTRY: ghcr.io/dsd-dbs/capella-dockerimages/

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install pre-commit
        run: |-
          python -m pip install 'pre-commit'
      - name: Run pre-commit
        run: |-
          pre-commit run --all-files

  deploy-docker-images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        capella_version:
          - '6.1.0'
          - '7.0.0'
        dropins:
          - name: 'without'
            dropins: 'ModelsImporter'
          - name: 'selected'
            dropins: 'ModelsImporter,CapellaXHTMLDocGen,DiagramStyler,PVMT,Filtering,Requirements,SubsystemTransition'
    name:
      Capella ${{ matrix.capella_version }} - ${{ matrix.dropins.name }}
      dropins
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      - name: Login to github container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set outputs
        id: tag
        run: |
          echo "branch=$(echo $GITHUB_REF_NAME | sed 's/[^a-zA-Z0-9.]/-/g')" >> "$GITHUB_OUTPUT"
          echo "sha=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"
      - name: Install CDI CLI
        run: uv venv && uv pip install -e ./cli
      - name: Build Capella (Base)
        run: >
          uv run cdi build capella \
            --no-remote \
            --build-type online \
            --capella-download-url 'https://mirror.umd.edu/eclipse/capella/core/products/releases/{}' \
            --capella-version "${{ matrix.capella_version }}" \
            --image-prefix "${{ env.REGISTRY }}" \
            --image-tag "{capella_version}-${{ matrix.dropins.name }}-dropins-${{ steps.tag.outputs.branch }}" \
            --capella-dropins "${{ matrix.dropins.dropins }}" \
            --label "git-short-sha=${{ steps.tag.outputs.sha }}" \
            --verbose \
            --push
      - name: Build Capella (Remote)
        run: >
          uv run cdi build capella \
            --remote \
            --skip-capella-image \
            --capella-version "${{ matrix.capella_version }}" \
            --image-prefix "${{ env.REGISTRY }}" \
            --image-tag "{capella_version}-${{ matrix.dropins.name }}-dropins-${{ steps.tag.outputs.branch }}" \
            --label "git-short-sha=${{ steps.tag.outputs.sha }}" \
            --verbose \
            --push
